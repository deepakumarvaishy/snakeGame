
let InputDir = { x: 0, y: 0 };
// starting me stop rhega 
const foodSound = new Audio('food-272135.mp3');
const gameOverSound = new Audio('game-over-arcade-6435.mp3');
const moveSound = new Audio('snake-hissing-6092.mp3');
const musicSound = new Audio('snakeecho-78798.mp3');
let speed = 5;
let score = 0;
let lastPaintTime = 0;
let snakeArr = [
    { x: 13, y: 15 }
];
let food = { x: 6, y: 7 };

let board = document.getElementById("board");

// game function 

function main(ctime) {
    window.requestAnimationFrame(main);
    if ((ctime - lastPaintTime) / 1000 < 1 / speed) {
        return;
    }
    lastPaintTime = ctime;
    gameEngine();
    console.log(ctime);

}

function isCollide(snake) {
    for (let i = 1; i < snakeArr.length; i++) {
        if (snake[i].x === snake[0].x && snake[i].y === snake[0].y) {
            return true;
        }
    }
    // ager divar se takara gya to 
    if (snake[0].x >= 18 || snake[0].x <= 0 || snake[0].y >= 18 || snake[0].y <= 0) {
        return true;
    }
}



function gameEngine() {
    // part 1 :updating the snake  array 
    if (isCollide(snakeArr)) {
        gameOverSound.play();
        musicSound.pause();
        InputDir = { x: 0, y: 0 };
        alert("Game over,press any key to play again !!");
        snakeArr = [{ x: 13, y: 15 }];
        musicSound.play();
        score = 0;
    }

    // if snake eat food  incre score and again food 
    if (snakeArr[0].y === food.y && snakeArr[0].x === food.x) {
        foodSound.play();
        score += 1;
        scoreBox.innerHTML = "score" + score;

        snakeArr.unshift({ x: snakeArr[0].x + InputDir.x, y: snakeArr[0].y + InputDir.y });
        let a = 2;
        let b = 16;
        food = { x: 2 + Math.round(a + (b - a) * Math.random()), y: 2 + Math.round(a + (b - a) * Math.random()) }
    }

    //moving  the snake 
    for (let i = snakeArr.length - 2; i >= 0; i--) {


        snakeArr[i + 1] = {...snakeArr[i] };


    }
    snakeArr[0].x += InputDir.x;
    snakeArr[0].y += InputDir.y;




    // part 2:display the snake and food 

    // Display the snake 

    board.innerHTML = "";
    snakeArr.forEach((e, index) => {
        const snakeElement = document.createElement('div');
        snakeElement.style.gridRowStart = e.y;
        snakeElement.style.gridColumnStart = e.x;

        if (index === 0) {
            snakeElement.classList.add('head');
        } else {
            snakeElement.classList.add('snake');
        }
        board.appendChild(snakeElement);

    });
    // display the food 
    const foodElement = document.createElement('div');
    foodElement.style.gridRowStart = food.y;
    foodElement.style.gridColumnStart = food.x;
    foodElement.classList.add('food');
    board.appendChild(foodElement);



}
// main logic
// ak bar call karega  
// looping ke lie 
let highScore = localStorage.getItem("hishScore");
if (highScore === null) {
    highScore = 0;
} else {
    highScore = parseInt(highScore);
}
if (score > highScore) {
    localStorage.setItem("hignScore", score);
    console.log("score", score);
} else {
    console.log("highsScore", highScore);
}
// }
window.requestAnimationFrame(main);
window.addEventListener('keydown', e => {
    InputDir = { x: 0, y: 1 }
        // start the game 
        // any botton push game start
    moveSound.play();
    switch (e.key) {
        case "ArrowUp":
            InputDir.x = 0;
            InputDir.y = -1;
            console.log("ArrowUp");

            break;
        case "ArrowDown":
            InputDir.x = 0;
            InputDir.y = 1;
            console.log("ArrowDown");

            break;
        case "ArrowLeft":
            InputDir.x = -1;
            InputDir.y = 0;
            console.log("ArrowLeft");

            break;
        case "ArrowRight":
            InputDir.x = 1;
            InputDir.y = 0;
            console.log("ArrowRight");

            break;


        default:
            break;
    }

});
